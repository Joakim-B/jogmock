import $ from"svelte-preprocess";import*as o from"path";import*as a from"fs/promises";import*as g from"path";var h=(s,...t)=>i.merging(...Object.getOwnPropertyNames(s).map(e=>i.alias({alias:e,directory:g.resolve(s[e])},...t)));var m=s=>{let t=h(s,i.sass,i.pkgJson);return function(n,r,u){Promise.resolve(t(n)).then(l=>{if(l!==void 0&&l.length>0){u({file:l[0]});return}u(null)})}};function b(s){return[s]}async function c(s,t){return a.stat(s).then(e=>t&&t(e)||!t?[s]:void 0).catch(()=>!1)}async function p(s){return c(s,t=>t.isFile())}async function R(s){return c(s,t=>t.isDirectory())}function f(...s){return async function(t){let e=[];for(let n of s.map(r=>`${t}.${r}`))await p(n)&&e.push(n);return e.length>0?e:void 0}}var d=f("js","cjs","mjs"),y=f("sass","scss","css");async function x(s){if(/\.(css|scss|sass)$/.test(s))return[s];let t=[s,`${s}/index`,`${s}/_index`];o.basename(s).startsWith("_")||t.push(`${o.dirname(s)}/_${o.basename(s)}`);let e=[];for(let n of t){let r=await y(n);r&&e.push(...r)}return e}async function P(s){let t=o.join(s,"package.json");try{if(await p(t)){let e=JSON.parse((await a.readFile(t)).toString()),n=e.main?o.join(s,e.main):void 0;if(n)return[n]}}catch(e){console.error(`Error resolving module package.json for path ${s}: ${e instanceof Error?e.message:e}`)}}async function j(s){let t=await d(o.join(s,"index"));if(t)return t}function v(...s){return async t=>{let e=[];for(let n of s)await Promise.resolve(n(t)).then(r=>{r!==void 0&&e.push(...r)});return e}}function w({alias:s,directory:t},...e){let n=v(...e);return async r=>{if(r.startsWith(s)&&r.length>s.length)return n(o.join(t,r.slice(s.length)))}}var i={identity:b,existing:c,existingFile:p,existingDir:R,extension:f,jsExtension:d,sassExtension:y,merging:v,sass:x,pkgJson:P,jsIndex:j,alias:w};var A=process.env.NODE_ENV==="production",E={preprocess:$({sourceMap:!A,scss:{importer:m({"@":"./src","~":"./node_modules"}),prependData:'@use "@styles/variables" as *;'}})},S=E;export{S as default};
